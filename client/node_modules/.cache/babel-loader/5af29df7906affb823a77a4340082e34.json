{"ast":null,"code":"var _jsxFileName = \"/Users/emina/projects/Propeller/client/src/helpers/Map.jsx\";\nimport React from 'react';\nimport { compose, withProps } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport './style.css';\nvar Map = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(function (props) {\n  return React.createElement(GoogleMap, {\n    defaultZoom: 14,\n    defaultCenter: {\n      lat: 43.8563,\n      lng: 18.4131\n    },\n    defaultMapTypeId: \"terrain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.offices.map(function (office) {\n    return (props.showOffice === 0 || props.showOffice === office.id) && React.createElement(Marker, {\n      key: office.id,\n      defaultTitle: office.address,\n      position: {\n        lat: office.lat,\n        lng: office.lng\n      },\n      onClick: props.onMarkerClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }));\n});\nexport default Map;","map":{"version":3,"sources":["/Users/emina/projects/Propeller/client/src/helpers/Map.jsx"],"names":["React","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","Map","googleMapURL","loadingElement","height","containerElement","mapElement","props","lat","lng","offices","map","office","showOffice","id","address","onMarkerClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,mBAA/D;AAEA,OAAO,aAAP;AAEA,IAAMC,GAAG,GAAGN,OAAO,CACfC,SAAS,CAAC;AACNM,EAAAA,YAAY,EAAE,mFADR;AAENC,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFV;AAGNC,EAAAA,gBAAgB,EAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ;AAINE,EAAAA,UAAU,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJN,CAAD,CADM,EAOfP,YAPe,EAQfC,aARe,CAAP,CASV,UAACS,KAAD;AAAA,SACE,oBAAC,SAAD;AACI,IAAA,WAAW,EAAE,EADjB;AAEI,IAAA,aAAa,EAAE;AAAEC,MAAAA,GAAG,EAAE,OAAP;AAAgBC,MAAAA,GAAG,EAAE;AAArB,KAFnB;AAGI,IAAA,gBAAgB,EAAC,SAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKKF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAkB,UAAAC,MAAM;AAAA,WACrB,CAACL,KAAK,CAACM,UAAN,KAAqB,CAArB,IAA0BN,KAAK,CAACM,UAAN,KAAqBD,MAAM,CAACE,EAAvD,KAA8D,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEF,MAAM,CAACE,EAApB;AAAwB,MAAA,YAAY,EAAEF,MAAM,CAACG,OAA7C;AAAsD,MAAA,QAAQ,EAAE;AAAEP,QAAAA,GAAG,EAAEI,MAAM,CAACJ,GAAd;AAAmBC,QAAAA,GAAG,EAAEG,MAAM,CAACH;AAA/B,OAAhE;AAAsG,MAAA,OAAO,EAAEF,KAAK,CAACS,aAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzC;AAAA,GAAxB,CALL,CADF;AAAA,CATU,CAAZ;AAqBA,eAAef,GAAf","sourcesContent":["import React from 'react';\nimport { compose, withProps } from \"recompose\"\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\n\nimport './style.css';\n\nconst Map = compose(\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places\",\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `400px` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n    }),\n    withScriptjs,\n    withGoogleMap\n)((props) =>\n    <GoogleMap\n        defaultZoom={14}\n        defaultCenter={{ lat: 43.8563, lng: 18.4131 }}\n        defaultMapTypeId='terrain'\n    >\n        {props.offices.map(office =>\n            (props.showOffice === 0 || props.showOffice === office.id) && <Marker key={office.id} defaultTitle={office.address} position={{ lat: office.lat, lng: office.lng }} onClick={props.onMarkerClick} />\n        )}\n    </GoogleMap>\n);\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}